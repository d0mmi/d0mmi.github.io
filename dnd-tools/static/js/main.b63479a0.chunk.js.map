{"version":3,"sources":["App.tsx","api/dnd5eapi.ts","pages/loot_picker/category_element.tsx","pages/loot_picker/item_element.tsx","pages/loot_picker/item_details_element.tsx","discord/DiscordWebhook.ts","imagebuilder/ImageBuilder.ts","pages/loot_picker/customitem_dialog.tsx","pages/loot_picker/loot_picker.tsx","reportWebVitals.ts","index.tsx"],"names":["classes","Dnd5eapi","name","get","category","rating","query","this","sendRequest","method","body","undefined","fetch","JSON","stringify","response","json","CategoryElement","props","state","select","onSelect","bind","ListItem","button","onClick","ListItemText","primary","React","Component","ItemElement","equipment","ItemDetails","item","click","open","getDescription","onOpen","list","ListItemIcon","equipment_category","push","gear_category","quantity","cost","unit","weight","desc","forEach","part","List","component","className","description_list","Collapse","in","timeout","unmountOnExit","disablePadding","nested","Typography","variant","setState","WebHook","title","items","url","discordClient","DiscordWebhook","text","i","length","execute","embeds","color","Color","AQUA","description","DEFAULT","GREEN","BLUE","PURPLE","GOLD","ORANGE","RED","GREY","DARKER_GREY","NAVY","DARK_AQUA","DARK_GREEN","DARK_BLUE","DARK_PURPLE","DARK_GOLD","DARK_ORANGE","DARK_RED","DARK_GREY","LIGHT_GREY","DARK_NAVY","LUMINOUS_VIVID_PINK","DARK_VIVID_PINK","LootImageBuilder","canvas","createCanvas","data","config","columns","options","textAlign","ct","CanvasTable","generateTable","toDataURL","CustomItemDialog","console","log","handleNameChange","handleCostChange","handleCountChange","handleClose","handleAdd","index","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","onInput","e","target","value","type","DialogActions","Button","close","add","withStyles","theme","root","formControl","spacing","minWidth","withTheme","LootPickerPage","field","headerName","disableClickEventBubbling","width","renderCell","params","IconButton","onAdd","aria-label","fontSize","onRemove","onDelete","hide","loading","categories","categoryilter","itemFilter","loot","selected","webhook","dialog","loadCategories","selectCategory","selectCategoryAll","selectCategoryMagic","selectItem","addItemToLoot","removetemFromLoot","setItemSearch","sendWebhook","downloadImage","showCustomItemDialog","closeCustomItemDialog","addCustomItem","rowIndex","splice","CircularProgress","Grid","container","direction","justify","alignItems","loot_picker","xs","Paper","loot_paper","loot_categories_list","map","size","startIcon","Autocomplete","freeSolo","disableClearable","option","renderInput","InputProps","onChange","event","newValue","onInputChange","newInputValue","loot_items_list","filter","toLowerCase","includes","loot_table","autoPageSize","rows","count","prize","loot_export","loot_button","endIcon","sendMessage","createImage","image","window","getEquipmentCategories","getAllCategory","results","concat","getMagicCategory","getEquipmentCategory","newItem","found","find","darkTheme","createMuiTheme","palette","Home","card_grid","SelectionCard","cardTitle","cardText","cardLink","Card","card","CardHeader","CardMedia","media","CardContent","CardActions","disableSpacing","to","App","useStyles","makeStyles","createStyles","height","monster_selector_paper","padding","monster_slider","marginRight","monster_selector_grid","overflow","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","flexGrow","maxHeight","marginTop","control","ThemeProvider","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b63479a0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport 'fontsource-roboto';\nimport LootPickerPage from './pages/loot_picker/loot_picker';\nimport { Card, CardActions, CardContent, CardHeader, CardMedia, createMuiTheme, createStyles, Grid, IconButton, makeStyles, Theme, ThemeProvider, Typography } from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { red } from '@material-ui/core/colors';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  }\n});\n\n\n\nexport var classes: any;\n\nfunction App() {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n      },\n      card: {\n        height: \"425px\",\n        width: \"400px\"\n      },\n      card_grid: {\n        height: \"90%\",\n        width: \"90%\"\n      },\n      monster_selector_paper: {\n        height: \"100%\",\n        width: \"100%\",\n        padding: \"10px\"\n      },\n      monster_slider: {\n        width: \"200px\",\n        marginRight: \"10px\"\n      },\n      monster_selector_grid: {\n        height: \"350\",\n        width: \"600\"\n      },\n      description_list: {\n        height: \"60%\",\n        overflow: 'auto',\n\n      },\n      media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n      },\n      expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      expandOpen: {\n        transform: 'rotate(180deg)',\n      },\n      avatar: {\n        backgroundColor: red[500],\n      },\n      loot_picker: {\n        flexGrow: 1,\n        height: \"100%\",\n        maxHeight: \"90vh\",\n        width: \"90vw\",\n\n      },\n      loot_categories_list: {\n        height: \"80%\",\n        overflow: 'auto',\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n\n      },\n      loot_items_list: {\n        height: \"70%\",\n        overflow: 'auto',\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n\n      },\n      loot_paper: {\n        height: \"100%\",\n        maxHeight: \"90vh\",\n        width: \"100%\",\n        paddingTop: \"1px\",\n        overflow: 'hidden',\n      },\n      loot_table: {\n        height: \"50%\",\n        maxHeight: \"90vh\",\n        width: \"100%\",\n        paddingTop: \"1px\"\n      },\n      loot_export: {\n        height: \"45%\",\n        maxHeight: \"90vh\",\n        width: \"100%\",\n        paddingTop: \"5%\",\n        marginTop: \"5%\"\n      },\n      loot_button: {\n        margin: \"5px\"\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n    }),\n  );\n\n  classes = useStyles();\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Router>\n\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/lootpicker\" render={(props) => <LootPickerPage {...props} />} />\n              <Route path=\"/\"><Home /> </Route>\n            </Switch>\n          </Router>\n        </header>\n\n      </div>\n    </ThemeProvider>\n\n  );\n}\n\n\nfunction Home() { // CardColumns for more Cards\n  return (\n    <Grid item xs={11} className={classes.card_grid} >\n      <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" spacing={2} >\n        <Grid key={1} item xs={1}>\n          <SelectionCard cardTitle=\"Loot Picker\" cardText=\"Pick your Loot and create a loot list.\" cardLink=\"lootpicker\" />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction SelectionCard(props: any) {\n\n  return <Card className={classes.card}>\n    <CardHeader\n      title={props.cardTitle}\n    />\n    <CardMedia\n      className={classes.media}\n      image=\"https://cdn.dribbble.com/users/191949/screenshots/6235095/image.png\"\n      title={props.cardTitle}\n    />\n    <CardContent>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {props.cardText}\n      </Typography>\n    </CardContent>\n    <CardActions disableSpacing>\n      <Link to={\"/\" + props.cardLink}><IconButton aria-label=\"open\"><KeyboardArrowRightIcon /> </IconButton></Link>\n    </CardActions>\n  </Card>;\n\n}\n\nexport default App;\n","export class Dnd5eapi {\r\n\r\n    public static async getEquipment(name: string): Promise<Item> {\r\n        return await Dnd5eapi.get(\"/api/equipment/\" + name) as Item;\r\n    }\r\n\r\n    public static async getMagicCategory(): Promise<EquipmentCategoriesResponse> {\r\n        return await Dnd5eapi.get(\"/api/magic-items\") as EquipmentCategoriesResponse;\r\n    }\r\n\r\n    public static async getAllCategory(): Promise<EquipmentCategoriesResponse> {\r\n        return await Dnd5eapi.get(\"/api/equipment\") as EquipmentCategoriesResponse;\r\n    }\r\n\r\n    public static async getEquipmentCategory(category: string): Promise<EquipmentCategoryResponse> {\r\n        return await Dnd5eapi.get(\"/api/equipment-categories/\" + category) as EquipmentCategoryResponse;\r\n    }\r\n\r\n    public static async getEquipmentCategories(): Promise<EquipmentCategoriesResponse> {\r\n        return await Dnd5eapi.get(\"/api/equipment-categories\") as EquipmentCategoriesResponse;\r\n    }\r\n\r\n    public static async getMonsters(rating: number = -1): Promise<EquipmentCategoriesResponse> {\r\n        return await Dnd5eapi.get(\"/api/monsters\" + ((rating >= 0) ? \"?challenge_rating=\" + rating : \"\")) as EquipmentCategoriesResponse;\r\n    }\r\n\r\n    public static async get(query: string) {\r\n        return await this.sendRequest(query);\r\n    }\r\n\r\n\r\n    private static async sendRequest(query: string, method: string = \"get\", body: any = undefined) {\r\n        var response = await fetch(\"https://www.dnd5eapi.co\" + query, { method: method, body: (body === undefined) ? undefined : JSON.stringify(body) });\r\n        var json = await response.json();\r\n        return json;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport type Index = {\r\n    index: string;\r\n    name: string;\r\n    url: string;\r\n}\r\n\r\n\r\nexport type EquipmentCategoriesResponse = {\r\n    count: number;\r\n    results: Index[];\r\n}\r\n\r\nexport type EquipmentCategoryResponse = {\r\n    index: string;\r\n    name: string;\r\n    equipment: Index[];\r\n}\r\n\r\n\r\nexport type Item = {\r\n    index: string;\r\n    name: string;\r\n    equipment_category: Index;\r\n    gear_category: Index;\r\n    quantity: number;\r\n    cost: {\r\n        quantity: number;\r\n        unit: string;\r\n    };\r\n    weight: number;\r\n    desc: string[];\r\n    url: string\r\n}","import React from 'react';\r\nimport '../../App.css';\r\nimport { Index } from '../../api/dnd5eapi';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\n\r\ninterface IState {\r\n    category: Index;\r\n    select: any;\r\n}\r\n\r\nclass CategoryElement extends React.Component<any, IState>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { category: props.category, select: props.select };\r\n        this.onSelect = this.onSelect.bind(this);\r\n    }\r\n    render() {\r\n        return (\r\n            <ListItem button onClick={this.onSelect}> <ListItemText primary={this.state.category.name} /></ListItem >\r\n        );\r\n    }\r\n\r\n    onSelect() {\r\n        this.state.select(this.state.category);\r\n    }\r\n\r\n}\r\n\r\nexport default CategoryElement;","import React from 'react';\r\nimport '../../App.css';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\n\r\nclass ItemElement extends React.Component<any>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.onSelect = this.onSelect.bind(this);\r\n    }\r\n    render() {\r\n        return (\r\n            <ListItem button onClick={this.onSelect}><ListItemText primary={this.props.equipment.name} /></ListItem>\r\n        );\r\n\r\n\r\n    }\r\n\r\n    onSelect() {\r\n        this.props.select(this.props.equipment);\r\n    }\r\n\r\n}\r\n\r\nexport default ItemElement;","import React from 'react';\r\nimport '../../App.css';\r\nimport { Item } from '../../api/dnd5eapi';\r\nimport { Collapse, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { classes } from '../../App';\r\n\r\n\r\ninterface IState {\r\n    item: Item;\r\n    click: any;\r\n    open: boolean;\r\n}\r\n\r\nclass ItemDetails extends React.Component<any, IState>\r\n{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { item: this.props.item, click: this.props.click, open: false };\r\n        this.onClick = this.onClick.bind(this);\r\n        this.getDescription = this.getDescription.bind(this);\r\n        this.onOpen = this.onOpen.bind(this);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.item.name}</h1>\r\n                {this.getDescription()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getDescription() {\r\n        var item: Item = this.state.item;\r\n        var list = [<ListItem button onClick={this.onClick} ><ListItemIcon><AddIcon /></ListItemIcon> <ListItemText primary={\"Add\"} /></ListItem>];\r\n        if (item.equipment_category !== undefined && item.equipment_category !== null) {\r\n            list.push(<ListItem ><ListItemText primary={\"Equipment Category: \" + item.equipment_category?.name} /></ListItem>);\r\n        }\r\n        if (item.gear_category !== undefined && item.gear_category !== null) {\r\n            list.push(<ListItem ><ListItemText primary={\"Gear Category: \" + item.gear_category?.name} /></ListItem>);\r\n        }\r\n        if (item.quantity !== undefined && item.quantity !== null) {\r\n            list.push(<ListItem ><ListItemText primary={\"Quantity: \" + item.quantity} /></ListItem>);\r\n        } else {\r\n            list.push(<ListItem ><ListItemText primary={\"Quantity: \" + 1} /></ListItem>);\r\n        }\r\n        if (item.cost !== undefined && item.cost !== null) {\r\n            list.push(<ListItem ><ListItemText primary={\"Cost: \" + item.cost?.quantity + \" \" + item.cost?.unit} /></ListItem>);\r\n        }\r\n        if (item.weight !== undefined && item.weight !== null) {\r\n            list.push(<ListItem ><ListItemText primary={\"Weight: \" + item.weight} /></ListItem>);\r\n        }\r\n        //var desc: JSX.Element[] = [];\r\n        var desc: string = \"\";\r\n        if (item.desc !== undefined && item.desc !== null) {\r\n            item.desc.forEach((part) => {\r\n                desc += part + \"\\n\";\r\n            });\r\n            list.push(<ListItem button onClick={this.onOpen}><ListItemIcon>{this.state.open ? <KeyboardArrowDownIcon /> : <KeyboardArrowRightIcon />} </ListItemIcon>{\"Description\"}</ListItem>);\r\n        }\r\n\r\n        return (<List component=\"nav\" className={classes.description_list} >\r\n            {list}\r\n            <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem className={classes.nested}>\r\n                        <Typography variant=\"body1\" component=\"p\">{desc}</Typography>\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n        </List>);\r\n    }\r\n\r\n    onOpen() {\r\n        this.setState({ open: !this.state.open });\r\n    }\r\n\r\n    onClick() {\r\n        this.state.click(this.state.item);\r\n    }\r\n\r\n}\r\n\r\nexport default ItemDetails;","import DiscordWebhook from \"discord-webhook-ts\";\r\nimport { Item } from \"../api/dnd5eapi\";\r\nexport class WebHook {\r\n    static async sendMessage(title: string, items: Item[], url: string) {\r\n        var discordClient = new DiscordWebhook(url);\r\n        var text = \"\";\r\n\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            text += item.quantity + \"x \" + item.name + \"\\n\";\r\n        }\r\n\r\n        discordClient.execute({\r\n            embeds: [\r\n                {\r\n                    title: title,\r\n                    color: Color.AQUA,\r\n                    description: text\r\n                }\r\n            ]\r\n        });\r\n    }\r\n}\r\n\r\nconst Color = {\r\n    DEFAULT: 0,\r\n    AQUA: 1752220,\r\n    GREEN: 3066993,\r\n    BLUE: 3447003,\r\n    PURPLE: 10181046,\r\n    GOLD: 15844367,\r\n    ORANGE: 15105570,\r\n    RED: 15158332,\r\n    GREY: 9807270,\r\n    DARKER_GREY: 8359053,\r\n    NAVY: 3426654,\r\n    DARK_AQUA: 1146986,\r\n    DARK_GREEN: 2067276,\r\n    DARK_BLUE: 2123412,\r\n    DARK_PURPLE: 7419530,\r\n    DARK_GOLD: 12745742,\r\n    DARK_ORANGE: 11027200,\r\n    DARK_RED: 10038562,\r\n    DARK_GREY: 9936031,\r\n    LIGHT_GREY: 12370112,\r\n    DARK_NAVY: 2899536,\r\n    LUMINOUS_VIVID_PINK: 16580705,\r\n    DARK_VIVID_PINK: 12320855\r\n}","import { createCanvas } from \"canvas\";\r\nimport { CanvasTable, CTConfig, CTData, CTColumn } from \"canvas-table\";\r\nimport { Item } from \"../api/dnd5eapi\";\r\n\r\nexport class LootImageBuilder {\r\n\r\n    static async createImage(items: Item[]) {\r\n\r\n        const canvas = createCanvas(300, 50 + (25 * items.length));\r\n        const data: CTData = [];\r\n\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            data.push([item.name, \"\" + item.quantity, item.cost.quantity + \" \" + item.cost.unit]);\r\n        }\r\n\r\n        const columns: CTColumn[] = [\r\n            { title: \"Item\" },\r\n            { title: \"Quantity\", options: { textAlign: \"center\" } },\r\n            { title: \"Cost\", options: { textAlign: \"center\" } }\r\n        ];\r\n        const config: CTConfig = { columns, data };\r\n        const ct = new CanvasTable(canvas, config);\r\n        await ct.generateTable();\r\n\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n}","import React from 'react';\r\nimport '../../App.css';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField, Theme, withStyles } from '@material-ui/core';\r\nimport { Item } from '../../api/dnd5eapi';\r\n\r\ninterface IState {\r\n    item: Item;\r\n}\r\n\r\nconst styles = (theme: Theme) => ({\r\n    root: {\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n});\r\n\r\n\r\nclass CustomItemDialog extends React.Component<any, IState>\r\n{\r\n    classes: any;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        console.log(props);\r\n        this.classes = this.props.classes;\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleCostChange = this.handleCostChange.bind(this);\r\n        this.handleCountChange = this.handleCountChange.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n\r\n        this.state = {\r\n            item: {\r\n                index: \"\",\r\n                name: \"\",\r\n                equipment_category: { index: \"\", name: \"\", url: \"\" },\r\n                gear_category: { index: \"\", name: \"\", url: \"\" },\r\n                quantity: 1,\r\n                cost: {\r\n                    quantity: 0,\r\n                    unit: \"gp\"\r\n                },\r\n                weight: 0,\r\n                desc: [],\r\n                url: \"\"\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Dialog open={this.props.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Custom Item</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Enter the information about the item below:</DialogContentText>\r\n                    <TextField autoFocus margin=\"dense\" id=\"name\" label=\"Name\" fullWidth onInput={(e: React.ChangeEvent<HTMLInputElement>) => this.handleNameChange(e.target.value)} />\r\n                    <TextField margin=\"dense\" id=\"cost\" label=\"Cost\" type=\"number\" fullWidth onInput={(e: React.ChangeEvent<HTMLInputElement>) => this.handleCostChange(+e.target.value)} />\r\n                    <TextField margin=\"dense\" id=\"count\" label=\"Count\" type=\"number\" fullWidth onInput={(e: React.ChangeEvent<HTMLInputElement>) => this.handleCountChange(+e.target.value)} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={this.handleAdd} color=\"primary\">Add Item</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n\r\n    }\r\n\r\n    handleNameChange(value: string) {\r\n        this.state.item.index = value;\r\n        this.state.item.name = value;\r\n        this.setState({});\r\n    }\r\n    handleCostChange(value: number) {\r\n        this.state.item.cost.quantity = value;\r\n        this.setState({});\r\n    }\r\n    handleCountChange(value: number) {\r\n        this.state.item.quantity = value;\r\n        this.setState({});\r\n    }\r\n\r\n    handleClose() {\r\n        this.props.close();\r\n    }\r\n\r\n    handleAdd() {\r\n        this.props.add(this.state.item);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(CustomItemDialog);","import React from 'react';\r\nimport '../../App.css';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Dnd5eapi, Index, Item } from '../../api/dnd5eapi';\r\nimport CategoryElement from './category_element';\r\nimport ItemElement from './item_element';\r\nimport ItemDetails from './item_details_element';\r\nimport { Button, CircularProgress, Grid, IconButton, List, Paper, TextField } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport { DataGrid, ColDef, CellParams } from '@material-ui/data-grid';\r\nimport { classes } from '../../App';\r\nimport { WebHook } from '../../discord/DiscordWebhook';\r\nimport { LootImageBuilder } from '../../imagebuilder/ImageBuilder';\r\nimport CustomItemDialog from './customitem_dialog';\r\n\r\ninterface IState {\r\n    loading: Boolean;\r\n    categories: Index[];\r\n    categoryilter: string;\r\n    items: Index[];\r\n    itemFilter: string;\r\n    selected: Item | null;\r\n    loot: Item[];\r\n    webhook: string;\r\n    dialog: boolean;\r\n}\r\nclass LootPickerPage extends React.Component<RouteComponentProps<any>, IState>\r\n{\r\n    constructor(props: RouteComponentProps) {\r\n        super(props);\r\n        this.state = { loading: true, categories: [], categoryilter: \"\", items: [], itemFilter: \"\", loot: [], selected: null, webhook: \"\", dialog: false };\r\n        this.loadCategories = this.loadCategories.bind(this);\r\n        this.selectCategory = this.selectCategory.bind(this);\r\n        this.selectCategoryAll = this.selectCategoryAll.bind(this);\r\n        this.selectCategoryMagic = this.selectCategoryMagic.bind(this);\r\n        this.selectItem = this.selectItem.bind(this);\r\n        this.addItemToLoot = this.addItemToLoot.bind(this);\r\n        this.removetemFromLoot = this.removetemFromLoot.bind(this);\r\n        this.setItemSearch = this.setItemSearch.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.sendWebhook = this.sendWebhook.bind(this);\r\n        this.downloadImage = this.downloadImage.bind(this);\r\n\r\n        this.showCustomItemDialog = this.showCustomItemDialog.bind(this);\r\n        this.closeCustomItemDialog = this.closeCustomItemDialog.bind(this);\r\n        this.addCustomItem = this.addCustomItem.bind(this);\r\n\r\n    }\r\n\r\n    columns: ColDef[] = [\r\n        {\r\n            field: \"\",\r\n            headerName: \"Edit\",\r\n            disableClickEventBubbling: true,\r\n            width: 150,\r\n            renderCell: (params: CellParams) => {\r\n\r\n                return <div>\r\n                    <IconButton onClick={(e) => this.onAdd(params)} aria-label=\"add\"><AddIcon fontSize=\"small\" /></IconButton>\r\n                    <IconButton onClick={(e) => this.onRemove(params)} aria-label=\"remove\"><RemoveIcon fontSize=\"small\" /></IconButton>\r\n                    <IconButton onClick={(e) => this.onDelete(params)} aria-label=\"delete\"><DeleteIcon fontSize=\"small\" /></IconButton>\r\n                </div>;\r\n            }\r\n        },\r\n        { field: 'id', headerName: 'ID', width: 70, hide: true },\r\n        { field: 'name', headerName: 'Name', width: 100 },\r\n        { field: 'count', headerName: 'Count', width: 90 },\r\n        { field: 'prize', headerName: '$', width: 90 },\r\n    ];\r\n\r\n    onAdd(params: CellParams) {\r\n        var index = params.rowIndex;\r\n        if (index !== undefined) {\r\n            var item = this.state.loot[index];\r\n            item.quantity++;\r\n            this.setState({});\r\n        }\r\n    }\r\n\r\n    onRemove(params: CellParams) {\r\n        var index = params.rowIndex;\r\n        if (index !== undefined) {\r\n            var item = this.state.loot[index];\r\n            if (item.quantity > 1) {\r\n                item.quantity--;\r\n                this.setState({});\r\n            } else {\r\n                this.onDelete(params);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDelete(params: CellParams) {\r\n        var index = params.rowIndex;\r\n        if (index !== undefined) {\r\n            this.state.loot.splice(index, 1);\r\n            this.setState({});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.loading) {\r\n            this.loadCategories();\r\n            return <CircularProgress />;\r\n        }\r\n\r\n        return (\r\n            <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" className={classes.loot_picker} spacing={2}>\r\n\r\n                <Grid item xs={12} className={classes.loot_picker}>\r\n                    <Grid container justify=\"center\" spacing={2} className={classes.loot_picker}>\r\n                        <Grid key={1} item xs={2}>\r\n                            <Paper className={classes.loot_paper}>\r\n                                <h2>Categories:</h2>\r\n                                <List component=\"nav\" className={classes.loot_categories_list} >\r\n                                    {this.state.categories.map((value, index) => {\r\n                                        if (value.index === \"all\") {\r\n                                            return (<CategoryElement index={index} category={value} select={this.selectCategoryAll} />);\r\n                                        } else if (value.index === \"magic\") {\r\n                                            return (<CategoryElement index={index} category={value} select={this.selectCategoryMagic} />);\r\n                                        } else {\r\n                                            return (<CategoryElement index={index} category={value} select={this.selectCategory} />);\r\n                                        }\r\n                                    })\r\n                                    }\r\n                                </List>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid key={2} item xs={2}>\r\n                            <Paper className={classes.loot_paper}>\r\n                                <h2>Items:</h2>\r\n                                <Button variant=\"outlined\" size=\"large\" onClick={(e) => this.showCustomItemDialog()} startIcon={<AddIcon />}> Add Custom Item </Button>\r\n                                <Autocomplete freeSolo id=\"free-solo-2-demo\" disableClearable options={this.state.items.map((option) => option.name)} renderInput={(params: any) => (\r\n                                    <TextField {...params} label=\"Filter\" margin=\"normal\" variant=\"outlined\" InputProps={{ ...params.InputProps, type: 'search' }} />)}\r\n                                    onChange={(event: any, newValue: string) => {\r\n                                        console.log(\"change: \" + newValue);\r\n                                        this.setItemSearch(newValue);\r\n                                    }}\r\n                                    onInputChange={(event, newInputValue) => {\r\n                                        this.setItemSearch(newInputValue);\r\n                                    }}\r\n                                />\r\n                                <List component=\"nav\" className={classes.loot_items_list} >\r\n                                    {this.state.items.filter(item => item.name.toLowerCase().includes(this.state.itemFilter.toLowerCase())).map((value) => (<ItemElement equipment={value} select={this.selectItem} />))}\r\n                                </List>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid key={3} item xs={3}>\r\n                            <Paper className={classes.loot_paper}> {(this.state.selected !== null) ? <ItemDetails item={this.state.selected} click={this.addItemToLoot} /> : <div></div>} </Paper>\r\n                        </Grid>\r\n                        <Grid key={4} item xs={3}>\r\n                            <Paper className={classes.loot_table}>\r\n                                <DataGrid autoPageSize rows={this.state.loot.map((item: Item, index: number) => ({ id: index, name: item.name, count: item.quantity, prize: (item.quantity * item.cost.quantity) + \" \" + item.cost.unit }))} columns={this.columns} />\r\n                            </Paper>\r\n                            <Paper className={classes.loot_export}>\r\n                                <h6>Send to Discord:</h6>\r\n                                <TextField id=\"outlined-basic\" label=\"Webhook-URL\" variant=\"outlined\" fullWidth onInput={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ webhook: e.target.value })} />\r\n                                <Button className={classes.loot_button} variant=\"outlined\" size=\"large\" onClick={(e) => this.sendWebhook()} endIcon={<SendIcon />}> Send </Button>\r\n                                <Button className={classes.loot_button} variant=\"outlined\" size=\"large\" onClick={(e) => this.downloadImage()} endIcon={<CloudDownloadIcon />}> Download Image </Button>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <CustomItemDialog open={this.state.dialog} close={this.closeCustomItemDialog} add={this.addCustomItem} />\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    showCustomItemDialog() {\r\n        this.setState({ dialog: true });\r\n    }\r\n\r\n    closeCustomItemDialog() {\r\n        this.setState({ dialog: false });\r\n    }\r\n\r\n    addCustomItem(item: Item) {\r\n        this.addItemToLoot(item);\r\n        this.closeCustomItemDialog();\r\n    }\r\n\r\n    async sendWebhook() {\r\n        WebHook.sendMessage(\"LootTable:\", this.state.loot, this.state.webhook);\r\n\r\n    }\r\n    async downloadImage() {\r\n\r\n        var image = await LootImageBuilder.createImage(this.state.loot);\r\n        window.open(image);\r\n    }\r\n\r\n    setItemSearch(value: string) {\r\n        this.setState({ itemFilter: value });\r\n    }\r\n\r\n    async loadCategories() {\r\n\r\n        var response = await Dnd5eapi.getEquipmentCategories();\r\n        var categories: Index[] = [{ index: \"all\", name: \"All Items\", url: \"\" }, { index: \"magic\", name: \"Magic Items\", url: \"\" }];\r\n        var items = (await Dnd5eapi.getAllCategory()).results;\r\n        this.setState({\r\n            categories: categories.concat(response.results),\r\n            items: items,\r\n            loading: false\r\n        });\r\n\r\n    }\r\n\r\n    async selectCategoryAll() {\r\n        var response = await Dnd5eapi.getAllCategory();\r\n        this.setState({\r\n            items: []\r\n        });\r\n        this.setState({\r\n            items: response.results\r\n        });\r\n    }\r\n\r\n    async selectCategoryMagic() {\r\n        var response = await Dnd5eapi.getMagicCategory();\r\n        this.setState({\r\n            items: []\r\n        });\r\n        this.setState({\r\n            items: response.results\r\n        });\r\n    }\r\n\r\n    async selectCategory(category: Index) {\r\n        var response = await Dnd5eapi.getEquipmentCategory(category.index);\r\n        this.setState({\r\n            items: []\r\n        });\r\n        this.setState({\r\n            items: response.equipment\r\n        });\r\n    }\r\n\r\n    async selectItem(item: Index) {\r\n        var response = await Dnd5eapi.get(item.url);\r\n        this.setState({\r\n            selected: null\r\n        });\r\n        this.setState({\r\n            selected: response\r\n        });\r\n    }\r\n\r\n    addItemToLoot(newItem: Item) {\r\n        if (newItem.quantity === undefined) {\r\n            newItem.quantity = 1;\r\n        }\r\n        if (newItem.cost === undefined) {\r\n            newItem.cost = { quantity: 0, unit: \"gp\" };\r\n        }\r\n\r\n        var found = this.state.loot.find((loot) => loot.index === newItem.index);\r\n\r\n        if (found !== undefined) {\r\n            found.quantity = found.quantity + newItem.quantity;\r\n        } else {\r\n            this.state.loot.push({\r\n                index: newItem.index,\r\n                name: newItem.name,\r\n                equipment_category: newItem.equipment_category,\r\n                gear_category: newItem.gear_category,\r\n                quantity: newItem.quantity,\r\n                cost: {\r\n                    quantity: newItem.cost.quantity,\r\n                    unit: newItem.cost.unit\r\n                },\r\n                weight: newItem.weight,\r\n                desc: newItem.desc,\r\n                url: newItem.url,\r\n            });\r\n        }\r\n        this.setState({});\r\n    }\r\n\r\n    removetemFromLoot(index: number) {\r\n        var loot = this.state.loot;\r\n        loot.splice(index, 1);\r\n        this.setState({ loot: loot });\r\n    }\r\n\r\n}\r\n\r\nexport default LootPickerPage;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}